# Workflow name
name: Deploy Eleventy site to Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: ["main"] # Or "master" if that's your default branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Define the job that will build and deploy
jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Get the deployed URL
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    steps:
      # 1. Check out your repository code
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Set up Node.js environment (Eleventy needs Node)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Use Node.js version 20 (or latest LTS)
          cache: 'npm' # Cache npm dependencies for faster builds

      # 3. Install project dependencies
      - name: Install dependencies
        run: npm ci # 'ci' is generally recommended for CI environments

      # 4. Build the Eleventy site
      - name: Build with Eleventy
        run: npx @11ty/eleventy # Run your build command

      # 5. Prepare the built site (_site folder) for deployment
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Specify the folder produced by the build command
          path: '_site'

      # 6. Deploy the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # This action requires the artifact uploaded in the previous step